#---------------------------------# 
#      environment configuration  # 
#---------------------------------# 
os: WMF 5
version: 1.0.0.{build}
install: 
  - cinst -y pester

#---------------------------------# 
#      build configuration        # 
#---------------------------------# 

build: false

#---------------------------------# 
#      test configuration         # 
#---------------------------------# 

test_script:
    - ps: |
        $testResultsFile = ".\TestsResults.xml"
        $res = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru
        (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
        if ($res.FailedCount -gt 0) { 
            throw "$($res.FailedCount) tests failed."
        }
    
#---------------------------------# 
#      deployment configuration   # 
#---------------------------------# 

# scripts to run before deployment 
deploy_script: 
  - ps: |
      # Creating project artifact
      $stagingDirectory = (Resolve-Path ..).Path
      
      # Cleanup staging directory
      Remove-Item -Path (Join-Path -Path $pwd -ChildPath '.git') -Recurse -Force
      Remove-Item -Path (Join-Path -Path $pwd -ChildPath '.gitignore') -Force
      Remove-Item -Path (Join-Path -Path $pwd -ChildPath 'DSCResource.Tests') -Recurse -Force

      # Set version number
      $manifest = Join-Path -Path $pwd -ChildPath "LoopbackAdapter.psd1"
      (Get-Content $manifest -Raw).Replace("1.0.0.0", $env:APPVEYOR_BUILD_VERSION) | Out-File $manifest
      
      # Create zip artifact
      $zipFilePath = Join-Path -Path $stagingDirectory -ChildPath "${env:APPVEYOR_PROJECT_NAME}_${env:APPVEYOR_BUILD_VERSION}.zip"
      Add-Type -assemblyname System.IO.Compression.FileSystem
      [System.IO.Compression.ZipFile]::CreateFromDirectory($pwd, $zipFilePath)
      
      # Creating NuGet package artifact
      New-Nuspec -packageName $env:APPVEYOR_PROJECT_NAME -version $env:APPVEYOR_BUILD_VERSION -author "Daniel Scott-Raynsford" -owners "Daniel Scott-Raynsford" -licenseUrl "https://github.com/$($env:APPVEYOR_REPO_NAME)/blob/master/LICENSE" -projectUrl "https://github.com/$($env:APPVEYOR_REPO_NAME)" -packageDescription $env:APPVEYOR_PROJECT_NAME -tags "Loopback Network Adapter" -destinationPath .
      nuget pack ".\$($env:APPVEYOR_PROJECT_NAME).nuspec" -outputdirectory .
      $nuGetPackageName = $env:APPVEYOR_PROJECT_NAME + "." + $env:APPVEYOR_BUILD_VERSION + ".nupkg"
      $nuGetPackagePath = (Get-ChildItem $nuGetPackageName).FullName
      
      # Create Publish Script Artifact
      $PublishScriptName = $env:APPVEYOR_PROJECT_NAME + "." + $env:APPVEYOR_BUILD_VERSION + "_publish.ps1"
      $PublishScriptPath = Join-Path -Path $StagingDirectory -ChildPath $PublishScriptName
      Set-Content -Path $PublishScriptPath -Value "Publish-Module -Name 'LoopbackAdapter' -RequiredVersion ${env:APPVEYOR_BUILD_VERSION} -NuGetApiKey (Read-Host -Prompt 'NuGetApiKey')"
      
      @(
          # You can add other artifacts here
          $zipFilePath,
          $nuGetPackagePath,
          $PublishScriptPath
      ) | % { 
          Write-Host "Pushing package $_ as Appveyor artifact"
          Push-AppveyorArtifact $_
      }
        


